/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.coletaTech;

import br.com.coletaTech.Model.Bean.Coletas;
import br.com.coletaTech.Model.Bean.Itens;
import br.com.coletaTech.Model.Bean.Produtos;
import br.com.coletaTech.Model.Bean.Usuario;
import br.com.coletaTech.Model.DAO.ColetasDAO;
import br.com.coletaTech.Model.DAO.ItensColetasDAO;
import br.com.coletaTech.Model.DAO.SaldoDAO;
import br.com.coletaTech.Model.DAO.UsuarioDAO;
import com.pi4j.io.gpio.GpioController;
import com.pi4j.io.gpio.GpioFactory;
import com.pi4j.io.gpio.GpioPinDigitalInput;
import com.pi4j.io.gpio.GpioPinDigitalOutput;
import com.pi4j.io.gpio.PinPullResistance;
import com.pi4j.io.gpio.PinState;
import com.pi4j.io.gpio.RaspiPin;
import com.pi4j.io.gpio.event.GpioPinDigitalStateChangeEvent;
import com.pi4j.io.gpio.event.GpioPinListenerDigital;
import com.pi4j.wiringpi.GpioUtil;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.sql.SQLException;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author wesley
 */
public class FrameColetor extends javax.swing.JFrame {
       static int contadorLata = 0;
       static int contadorPet = 0;
       static int contadorAcumulado = 0;
       static int SensorMetal = 0;
       static int SensorPet = 0;
       static int SensorGeral = 0;
       static int contadorDescart = 0;
       static int coletaAtual;
       static boolean iniciado = false;    
       static boolean EstouMetal = false;
       static boolean EstouPet = false;
       static int entreiMetal = 0;
       static int entreiGeral = 0;
       static int entreiPet   = 0;
       static int LIBERADO    = 0;
       static int ProximoEvento = 0;

       
       GpioController gpioPIRMotionSensorMetal = GpioFactory.getInstance();
       GpioPinDigitalInput pirMotionsensorMetal = gpioPIRMotionSensorMetal.provisionDigitalInputPin(RaspiPin.GPIO_05, PinPullResistance.PULL_DOWN);

       GpioController gpioPIRMotionSensorPet = GpioFactory.getInstance();
       GpioPinDigitalInput pirMotionsensorPet = gpioPIRMotionSensorPet.provisionDigitalInputPin(RaspiPin.GPIO_04, PinPullResistance.PULL_DOWN);

        //Sensor Geral
       GpioController gpioPIRMotionSensorGeral = GpioFactory.getInstance();
       GpioPinDigitalInput pirMotionsensorGeral = gpioPIRMotionSensorGeral.provisionDigitalInputPin(RaspiPin.GPIO_03, PinPullResistance.PULL_DOWN);

       GpioController gpioLED = GpioFactory.getInstance();          
       GpioPinDigitalOutput led = gpioLED.provisionDigitalOutputPin(RaspiPin.GPIO_29,"LED",PinState.LOW);
 /**
     * Creates new form FrameColetor
     */
       @SuppressWarnings("static-access")
    public FrameColetor() throws SQLException {

        initComponents();
        setSize(800,500);
        
        UsuarioDAO usuarioDAO = new UsuarioDAO();
        System.out.println(usuarioDAO.usuarioLogado);
        System.out.println(usuarioDAO.id_usuarioLogado);
        jLabelUsuario.setText(usuarioDAO.usuarioLogado);
        
        SaldoDAO saldoDAO = new SaldoDAO();
        saldoDAO.consultaSaldo(usuarioDAO.id_usuarioLogado);
        System.out.println("O saldo Atual Ã©: "+saldoDAO.saldo_usuariologado);
  
        jLabelQuantAcumulado.setText(Long.toString(saldoDAO.saldo_usuariologado));
        contadorAcumulado = (int) saldoDAO.saldo_usuariologado;
      
        jLabelPONTOSFUNDO.setVisible(false);
        jLabelPONTOS.setVisible(false);
        jLabelObjeto.setVisible(false);

    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelPONTOS = new javax.swing.JLabel();
        jLabelPONTOSFUNDO = new javax.swing.JLabel();
        jLabelObjeto = new javax.swing.JLabel();
        jLabelQuantLatas = new javax.swing.JLabel();
        jLabelQuantPets = new javax.swing.JLabel();
        jLabelQuantAcumulado = new javax.swing.JLabel();
        jLabelUsuario = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(1024, 600));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1024, 600));
        getContentPane().setLayout(null);

        jLabelPONTOS.setFont(new java.awt.Font("Tahoma", 1, 250)); // NOI18N
        jLabelPONTOS.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPONTOS.setText("0");
        getContentPane().add(jLabelPONTOS);
        jLabelPONTOS.setBounds(260, 250, 670, 240);

        jLabelPONTOSFUNDO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/coletaTech/imagens/PONTOS.png"))); // NOI18N
        jLabelPONTOSFUNDO.setText("jLabel1");
        getContentPane().add(jLabelPONTOSFUNDO);
        jLabelPONTOSFUNDO.setBounds(0, 110, 990, 440);

        jLabelObjeto.setBackground(new java.awt.Color(204, 0, 0));
        jLabelObjeto.setFont(new java.awt.Font("Cooper Std", 1, 48)); // NOI18N
        jLabelObjeto.setForeground(new java.awt.Color(255, 255, 255));
        jLabelObjeto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/coletaTech/imagens/objeto.png"))); // NOI18N
        getContentPane().add(jLabelObjeto);
        jLabelObjeto.setBounds(10, 160, 980, 200);

        jLabelQuantLatas.setFont(new java.awt.Font("Tahoma", 1, 70)); // NOI18N
        jLabelQuantLatas.setForeground(new java.awt.Color(102, 102, 102));
        jLabelQuantLatas.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelQuantLatas.setText("0");
        getContentPane().add(jLabelQuantLatas);
        jLabelQuantLatas.setBounds(670, 310, 290, 85);

        jLabelQuantPets.setFont(new java.awt.Font("Tahoma", 1, 70)); // NOI18N
        jLabelQuantPets.setForeground(new java.awt.Color(102, 102, 102));
        jLabelQuantPets.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelQuantPets.setText("0");
        getContentPane().add(jLabelQuantPets);
        jLabelQuantPets.setBounds(750, 160, 210, 85);

        jLabelQuantAcumulado.setFont(new java.awt.Font("Tahoma", 1, 145)); // NOI18N
        jLabelQuantAcumulado.setForeground(new java.awt.Color(102, 102, 102));
        jLabelQuantAcumulado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelQuantAcumulado.setText("0");
        getContentPane().add(jLabelQuantAcumulado);
        jLabelQuantAcumulado.setBounds(90, 200, 310, 280);

        jLabelUsuario.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabelUsuario.setForeground(new java.awt.Color(204, 204, 204));
        jLabelUsuario.setText("jLabelUsuario");
        getContentPane().add(jLabelUsuario);
        jLabelUsuario.setBounds(190, 556, 280, 20);

        jButton1.setBackground(new java.awt.Color(58, 65, 84));
        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("INICIAR");
        jButton1.setBorderPainted(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(820, 430, 160, 110);

        jLabel1.setText("V1.0");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
        });
        getContentPane().add(jLabel1);
        jLabel1.setBounds(940, 560, 30, 16);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/coletaTech/imagens/fundoColetorOk.png"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 1030, 600);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
         
       if (iniciado) {            

              jButton1.setBackground(new Color(235, 235, 235));
              jButton1.setForeground(new Color(217,81,51));
       } else {
      
              jButton1.setBackground(new Color(235, 235, 235));
              jButton1.setForeground(new Color(58,65,84));
       }
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
     
        if (iniciado){
            
           jButton1.setBackground(new Color(217,81,51));
           jButton1.setForeground(Color.white);
            
        } else {
        jButton1.setBackground(new Color(58, 65, 84));
        jButton1.setForeground(Color.white);
        }
         // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
      this.iniciado = !this.iniciado;
           try {  
               Verificar();
           } catch (InterruptedException ex) {
               Logger.getLogger(FrameColetor.class.getName()).log(Level.SEVERE, null, ex);
           }
         
       }//GEN-LAST:event_jButton1MousePressed

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
                  // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseClicked
  
    public void closeGPIO(){
        
          //Sensor de Metal
   
       // gpioPIRMotionSensorMetal.shutdown();
        gpioPIRMotionSensorMetal.unprovisionPin(pirMotionsensorMetal);
 
       // gpioPIRMotionSensorPet.shutdown();
        gpioPIRMotionSensorPet.unprovisionPin(pirMotionsensorPet);
 
       // gpioPIRMotionSensorGeral.shutdown();
        gpioPIRMotionSensorGeral.unprovisionPin(pirMotionsensorGeral);
 
       // gpioLED.shutdown();
        gpioLED.unprovisionPin(led);
   
    }
    
    
    public void init(){
        GpioUtil.enableNonPrivilegedAccess();
        
              pirMotionsensorGeral.addListener(new GpioPinListenerDigital() {
            public void handleGpioPinDigitalStateChangeEvent(GpioPinDigitalStateChangeEvent event) {
            
                    if(event.getState().isLow()){ 
                        
                            entreiGeral = 1;
                            
                            led.high();
                   } else {

                     //   SensorGeral = 0;
                    System.out.println("Deu treta Mano");

                    led.low();
                 //   entreiMetal = 0;
                 //   entreiPet   = 0;

                    }
           
              }
          
              
    });
 
        pirMotionsensorMetal.addListener(new GpioPinListenerDigital() {
              
            public void handleGpioPinDigitalStateChangeEvent(GpioPinDigitalStateChangeEvent event) {
                
                if(event.getState().isLow()){ 
                       
                    entreiMetal = 1; 
                   // entreiGeral = 0;
                           
                       
                   }  
                }
                  
        });
        
        pirMotionsensorPet.addListener(new GpioPinListenerDigital() {
            public void handleGpioPinDigitalStateChangeEvent(GpioPinDigitalStateChangeEvent event) {
            
                    if(event.getState().isHigh()){ 
                                entreiPet = 1;
                              //  entreiGeral = 0;
                        

                            
                    }
              }
          
              
    });
        

     
    
    } //final do main
        
    public static void lancaItens(int lancProduto, int lancColeta){
        
        Itens itens = new Itens();
        
        ItensColetasDAO itenscoletasDAO = new ItensColetasDAO();
        
        Produtos produtos = new Produtos();
        produtos.setId_produtos(lancProduto); //colocar aqui o codigo do produto
        
        Coletas coletas = new Coletas();
        coletas.setId_coletas(lancColeta); //colocar aqui o codigo da coleta atual

        itens.setProdutos(produtos);
        itens.setQuant_itens(1);
        itens.setColetas(coletas);
       
        System.out.println("LanÃ§ando itens:");
        System.out.println("Produto: "+produtos.getDesc_produtos());
        System.out.println("Coletas: "+coletas.getId_coletas());
        
        itenscoletasDAO.gravarItensColetas(itens);
        
    }   
    
    
    public void Verificar() throws InterruptedException {        
           if (iniciado) {     
               
               Coletas coletas = new Coletas();
               ColetasDAO coletasDAO = new ColetasDAO();
               
               UsuarioDAO usuarioDAO = new UsuarioDAO();
               
               Usuario usuario = new Usuario();
               usuario.setId_usuarios(usuarioDAO.id_usuarioLogado);
            
               // coletas.setData_coletas(getPegaDataAtual());
               coletas.setUsuario(usuario);
               // coletas.setUsuario_coletas(usuarioDAO.id_usuarioLogado);
               
               coletasDAO.gravarColetas(coletas);
               
               coletaAtual = coletas.getId_coletas();
//               System.out.println("A Coleta atual Ã©: "+ coletasDAO.ultimaColeta());
        
               System.out.println("Coleta Atual Inicial: "+ coletaAtual);
   
               jButton1.setText("FINALIZAR");
               jButton1.setBackground(new Color(235, 235, 235));
               jButton1.setForeground(new Color(217,81,51));
               init();
    
	       loop();
               
	      } else {    
               
               try {

                   contadorPet = 0;
                   contadorLata = 0;
       

                   jLabelPONTOS.setText(Long.toString(contadorAcumulado));
 
                   UsuarioDAO usuarioDAO = new UsuarioDAO();
                   
                   SaldoDAO saldoDAO = new SaldoDAO();
                   
                   saldoDAO.atualizaSaldo(usuarioDAO.id_usuarioLogado, contadorAcumulado);
                   System.out.println("Atualizando Saldo:");
                   System.out.println("Usuario: "+usuarioDAO.id_usuarioLogado);
                   System.out.println("Saldo Atual: "+ contadorAcumulado);
                   
                   jButton1.setText("INICIAR");
                   jButton1.setBackground(new Color(235, 235, 235));
                   jButton1.setForeground(new Color(58,65,84));
                   

                   closeGPIO();
                                   
                   sleep(1000);
                   jLabelPONTOSFUNDO.setVisible(true);
                   jLabelPONTOS.setVisible(true);

                   new FrameLogin().setVisible(true);//que quer abrir
                   this.dispose();                
              // fechaForm();
                   
                   
               } catch (SQLException ex) {
                   Logger.getLogger(FrameColetor.class.getName()).log(Level.SEVERE, null, ex);
               }


	    }  
      }    
  
            
    
    public static void fechaForm(){
             new Thread() {
                 public void run() { 
                     try {

                         Thread.sleep(5000);
                         this.dispose();
                    
                         
                         
                     } catch (InterruptedException ex) {
                         Logger.getLogger(FrameColetor.class.getName()).log(Level.SEVERE, null, ex);
                     }

              } 

                 private void dispose() {
                     throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                 }

 
             }.start();                  
    }
           
    public static void loop() {          
		new Thread() {     
			public void run() {  
				while (iniciado) {        
					System.out.println("Looping: \nSensorMetal: "+entreiMetal+" \nSensor Pet:  "+entreiPet+" \nSensorGeral: "+entreiGeral);   
					try {
                                            
		                     	         if (entreiGeral == 0){
                                                     
                                                     Thread.sleep(1000);
                                                     contadorDescart=0;
                                                     System.out.println("Sensor Geral Ainda E 0");
                                                     jLabelObjeto.setVisible(false);

                                                     ProximoEvento++;
                                                     
                                                 }else {
                                                     
                                                     Thread.sleep(1000);
                                                     contadorDescart++;
                                                     System.out.println("Sensor Geral Agora E 1, Contador Ã©: "+contadorDescart);

                                                 }    
                                                 
                                                 
                                                System.out.println("Metal Antes: "+ entreiMetal+" Liberado: "+LIBERADO);
                                                if (entreiMetal == 1 && entreiGeral == 1) {
                                                     
                                                     System.out.println("Evento quanto Entrei: "+ProximoEvento);
                                                     ProximoEvento = 0;

                                                     entreiMetal = 0;
                                                     entreiPet = 0;
                                                     
                                                     contadorLata++;                     
                                                     contadorAcumulado++;                     
                                           
                                                     jLabelQuantLatas.setText(String.valueOf(contadorLata));                     
                                                     jLabelQuantAcumulado.setText(String.valueOf(contadorAcumulado));                     
                                                     entreiMetal = 0;

                                                     abrirMetal();                      
                                                     entreiMetal = 0;
                                                     lancaItens(2,coletaAtual);
                                                     
                                                     entreiMetal = 0;
                                                     entreiPet = 0;
                                                     entreiGeral = 0;

                                                     System.out.println("Metal Saindo: "+entreiMetal);
                                                     System.out.println("Evento quanto Sai: "+ProximoEvento);


                                                } 
                                              
                                                
                                                if (entreiPet == 1 && entreiMetal == 0 && entreiGeral == 1){
                                                    entreiPet = 0;
                                                    entreiGeral = 0;

                                                    Thread.sleep(1000);
                                                    
                                                    if (entreiMetal == 0){
                                                                                                        
                                                        contadorPet++;
                                                        contadorAcumulado++;
                                              
                                                        abrirPet();
                                                        jLabelQuantPets.setText(String.valueOf(contadorPet));
                                                        jLabelQuantAcumulado.setText(String.valueOf(contadorAcumulado));
                                                        lancaItens(1,coletaAtual); //aqui vai a pet e o codigo da Coleta Atual
                                                       
                                                        entreiGeral = 0;
                                                        //entreiMetal = 0;
                                                        entreiPet = 0;  

                                                    }
                                                    
                                                    
                                                 }
                                                
                                              
                                              System.out.println("DESCARTE: "+entreiGeral);
                                                
                                              if (entreiGeral == 1 && entreiMetal == 0 && entreiPet == 0 && contadorDescart > 10){
                                                    
                                                    entreiGeral = 0;
                                                    contadorDescart = 0;
                                                    
                                                    jLabelObjeto.setVisible(true);

                                                    System.out.println("OBJETO NÃO DETECTADO!");
                                                    abrirGeral();
                                              
                                                    
                                                }
                                              
                                                                             
					} catch (InterruptedException e) {
						e.printStackTrace();
					}

				}
				System.out.println("Terminado!");
			}       
		}.start();
	}   
    
      // enter your code here
    public static void abrirMetal() throws InterruptedException {
               
        ProcessBuilder pb = new ProcessBuilder("python", "servoGeralMetal.py");
        pb.directory(new File("/home/pi/servoMotor/"));
        System.out.println("Executei o Servo Metal");
        
           try {
               Process p = pb.start();
           } catch (IOException ex) {
               Logger.getLogger(FrameColetor.class.getName()).log(Level.SEVERE, null, ex);
           }

 
   }
    
    public static void abrirPet() throws InterruptedException{
        
               ProcessBuilder pb = new ProcessBuilder("python", "servoGeralPet.py");
               pb.directory(new File("/home/pi/servoMotor/"));
               System.out.println("Executei o Servo Pet");

           try {
               Process p = pb.start();
           } catch (IOException ex) {
               Logger.getLogger(FrameColetor.class.getName()).log(Level.SEVERE, null, ex);
           }
  
      
   }
    
    public static void abrirGeral() throws InterruptedException{
        
           try {
               ProcessBuilder pb = new ProcessBuilder("python", "servoGeral.py");
               pb.directory(new File("/home/pi/servoMotor/"));
               System.out.println("Executei o Servo Geral");

               Process p = pb.start();
               
                    } catch (IOException ex) {
               Logger.getLogger(FrameColetor.class.getName()).log(Level.SEVERE, null, ex);
           }
    }
    
        public static void pause(long ms) {
        try {
            Thread.sleep(ms);
        } catch (Exception e) {
            System.out.println("Exception occured: " + e.getMessage());
        } 
    }
    
 
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    public static javax.swing.JLabel jLabelObjeto;
    private javax.swing.JLabel jLabelPONTOS;
    private javax.swing.JLabel jLabelPONTOSFUNDO;
    private static javax.swing.JLabel jLabelQuantAcumulado;
    private static javax.swing.JLabel jLabelQuantLatas;
    private static javax.swing.JLabel jLabelQuantPets;
    private javax.swing.JLabel jLabelUsuario;
    // End of variables declaration//GEN-END:variables
}
